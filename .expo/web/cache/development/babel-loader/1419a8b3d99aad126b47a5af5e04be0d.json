{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Users\\\\tyrli\\\\Documents\\\\Things\\\\Node-Web\\\\health-hackumbc2020\\\\src\\\\components\\\\Button.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Colors from \"../styles/Colors\";\n\nvar Button = function (_Component) {\n  _inherits(Button, _Component);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    _classCallCheck(this, Button);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 14\n        }\n      }, this.buttonTypes());\n    }\n  }, {\n    key: \"buttonTypes\",\n    value: function buttonTypes() {\n      if (this.props.primaryText) {\n        return React.createElement(View, {\n          style: (styles.container, styles.primaryText),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 5\n          }\n        }, React.createElement(Text, {\n          style: styles.primaryText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 7\n          }\n        }, this.props.title));\n      } else if (this.props.secondary) {\n        return React.createElement(View, {\n          style: (styles.container, styles.secondaryText),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 5\n          }\n        }, React.createElement(Text, {\n          style: styles.secondaryText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }\n        }, this.props.title));\n      }\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nexport { Button as default };\nvar styles = StyleSheet.create({\n  container: {\n    position: \"absolute\",\n    width: 188,\n    height: 57,\n    left: 45,\n    top: 20,\n    borderRadius: 15\n  },\n  primaryText: {\n    backgroundColor: Colors.PRIMARY,\n    color: Colors.WHITE\n  },\n  secondaryText: {\n    backgroundColor: Colors.SECONDARY,\n    color: Colors.WHITE\n  },\n  text: {\n    position: \"absolute\",\n    left: \"31.91%\",\n    right: \"32.45%\",\n    top: \"26.32%\",\n    bottom: \"26.32%\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n    lineHeight: 27,\n    display: \"flex\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    color: \"#252B63\"\n  }\n});","map":{"version":3,"sources":["D:/Users/tyrli/Documents/Things/Node-Web/health-hackumbc2020/src/components/Button.js"],"names":["React","Component","Colors","Button","props","buttonTypes","primaryText","styles","container","title","secondary","secondaryText","StyleSheet","create","position","width","height","left","top","borderRadius","backgroundColor","PRIMARY","color","WHITE","SECONDARY","text","right","bottom","fontWeight","fontSize","lineHeight","display","alignItems","textAlign"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,MAAP;;IAEqBC,M;;;;;AACnB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BACQ;AACL,aAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAKC,WAAL,EAAP,CAAP;AACH;;;kCAGW;AAEZ,UAAI,KAAKD,KAAL,CAAWE,WAAf,EAA4B;AAC1B,eACA,oBAAC,IAAD;AAAM,UAAA,KAAK,GAAEC,MAAM,CAACC,SAAP,EAAkBD,MAAM,CAACD,WAA3B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACD,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkC,KAAKF,KAAL,CAAWK,KAA7C,CADF,CADA;AAKD,OAND,MAOK,IAAI,KAAKL,KAAL,CAAWM,SAAf,EAA0B;AAC7B,eACA,oBAAC,IAAD;AAAM,UAAA,KAAK,GAAEH,MAAM,CAACC,SAAP,EAAkBD,MAAM,CAACI,aAA3B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACI,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoC,KAAKP,KAAL,CAAWK,KAA/C,CADF,CADA;AAKD;AAEF;;;;EA1BmCR,S;;SAAfE,M;AA+BrB,IAAMI,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,KAAK,EAAE,GAFE;AAGTC,IAAAA,MAAM,EAAE,EAHC;AAITC,IAAAA,IAAI,EAAE,EAJG;AAKTC,IAAAA,GAAG,EAAE,EALI;AAMTC,IAAAA,YAAY,EAAE;AANL,GADoB;AAS/Bb,EAAAA,WAAW,EAAE;AACXc,IAAAA,eAAe,EAAElB,MAAM,CAACmB,OADb;AAEXC,IAAAA,KAAK,EAAEpB,MAAM,CAACqB;AAFH,GATkB;AAa/BZ,EAAAA,aAAa,EAAE;AACbS,IAAAA,eAAe,EAAElB,MAAM,CAACsB,SADX;AAEbF,IAAAA,KAAK,EAAEpB,MAAM,CAACqB;AAFD,GAbgB;AAiB/BE,EAAAA,IAAI,EAAE;AACJX,IAAAA,QAAQ,EAAE,UADN;AAEJG,IAAAA,IAAI,EAAE,QAFF;AAGJS,IAAAA,KAAK,EAAE,QAHH;AAIJR,IAAAA,GAAG,EAAE,QAJD;AAKJS,IAAAA,MAAM,EAAE,QALJ;AAMJC,IAAAA,UAAU,EAAE,MANR;AAOJC,IAAAA,QAAQ,EAAE,EAPN;AAQJC,IAAAA,UAAU,EAAE,EARR;AASJC,IAAAA,OAAO,EAAE,MATL;AAUJC,IAAAA,UAAU,EAAE,QAVR;AAWJC,IAAAA,SAAS,EAAE,QAXP;AAaJX,IAAAA,KAAK,EAAE;AAbH;AAjByB,CAAlB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport Colors  from '../styles/Colors';\r\n\r\nexport default class Button extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n      return <View>{this.buttonTypes()}</View>;\r\n  }\r\n\r\n\r\nbuttonTypes (){\r\n\r\n  if (this.props.primaryText) {\r\n    return (\r\n    <View style={styles.container, styles.primaryText}>\r\n      <Text style={styles.primaryText}>{this.props.title}</Text>\r\n    </View>\r\n    )\r\n  }\r\n  else if (this.props.secondary) {\r\n    return (\r\n    <View style={styles.container, styles.secondaryText}>\r\n      <Text style={styles.secondaryText}>{this.props.title}</Text>\r\n    </View>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    position: \"absolute\",\r\n    width: 188,\r\n    height: 57,\r\n    left: 45,\r\n    top: 20,\r\n    borderRadius: 15,\r\n  },\r\n  primaryText: {\r\n    backgroundColor: Colors.PRIMARY,\r\n    color: Colors.WHITE,\r\n  },\r\n  secondaryText: {\r\n    backgroundColor: Colors.SECONDARY,\r\n    color: Colors.WHITE,\r\n  },\r\n  text: {\r\n    position: \"absolute\",\r\n    left: \"31.91%\",\r\n    right: \"32.45%\",\r\n    top: \"26.32%\",\r\n    bottom: \"26.32%\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n    lineHeight: 27,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n\r\n    color: \"#252B63\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}